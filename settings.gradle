/*
 * MIT License
 *
 * Copyright (c) 2023 Hasitha Aravinda. All rights reserved.
 * 
 * This work is licensed under the terms of the MIT license.  
 * For a copy, see <https://opensource.org/licenses/MIT>.
 */
rootProject.name = 'Bal.Tips Website'
include('buildTasks')

// Output files

// Add Literals
include(':docs-expression-literal')
project(':docs-expression-literal').projectDir = file('content.en/docs/expressions/literals/')
include(':docs-expression-literal-boolean')
project(':docs-expression-literal-boolean').projectDir = file('content.en/docs/expressions/literals/boolean')
include(':docs-expression-literal-byte-array')
project(':docs-expression-literal-byte-array').projectDir = file('content.en/docs/expressions/literals/byte-array')
include(':docs-expression-literal-float')
project(':docs-expression-literal-float').projectDir = file('content.en/docs/expressions/literals/float')
include(':docs-expression-literal-int')
project(':docs-expression-literal-int').projectDir = file('content.en/docs/expressions/literals/int')
include(':docs-expression-literal-nil')
project(':docs-expression-literal-nil').projectDir = file('content.en/docs/expressions/literals/nil')
include(':docs-expression-literal-string')
project(':docs-expression-literal-string').projectDir = file('content.en/docs/expressions/literals/string')

// Add template files raw, string, xml
include(':docs-expression-template-raw')
project(':docs-expression-template-raw').projectDir = file('content.en/docs/expressions/templates/raw')
include(':docs-expression-template-string')
project(':docs-expression-template-string').projectDir = file('content.en/docs/expressions/templates/string')
include(':docs-expression-template-xml')
project(':docs-expression-template-xml').projectDir = file('content.en/docs/expressions/templates/xml')

// Add Introduction
include(':docs-introduction-basic')
project(':docs-introduction-basic').projectDir = file('content.en/docs/introduction/basics/')

// Add langlib files
include(':docs-langlib-array')
include(':docs-langlib-array-functions-enumerate')
include(':docs-langlib-array-functions-every')
include(':docs-langlib-array-functions-filter')
include(':docs-langlib-array-functions-forEach')
include(':docs-langlib-array-functions-fromBase16')
include(':docs-langlib-array-functions-fromBase64')
include(':docs-langlib-array-functions-indexOf')
include(':docs-langlib-array-functions-iterator')
include(':docs-langlib-array-functions-lastIndexOf')
include(':docs-langlib-array-functions-length')
include(':docs-langlib-array-functions-map')
include(':docs-langlib-array-functions-pop')
include(':docs-langlib-array-functions-push')
include(':docs-langlib-array-functions-reduce')
include(':docs-langlib-array-functions-remove')
include(':docs-langlib-array-functions-removeAll')
include(':docs-langlib-array-functions-reverse')
include(':docs-langlib-array-functions-setLength')
include(':docs-langlib-array-functions-shift')
include(':docs-langlib-array-functions-slice')
include(':docs-langlib-array-functions-some')
include(':docs-langlib-array-functions-sort')
include(':docs-langlib-array-functions-toBase16')
include(':docs-langlib-array-functions-toBase64')
include(':docs-langlib-array-functions-toStream')
include(':docs-langlib-array-functions-unshift')
project(':docs-langlib-array').projectDir = file('content.en/docs/langlib/array/')
project(':docs-langlib-array-functions-enumerate').projectDir = file('content.en/docs/langlib/array/functions/enumerate')
project(':docs-langlib-array-functions-every').projectDir = file('content.en/docs/langlib/array/functions/every')
project(':docs-langlib-array-functions-filter').projectDir = file('content.en/docs/langlib/array/functions/filter')
project(':docs-langlib-array-functions-forEach').projectDir = file('content.en/docs/langlib/array/functions/forEach')
project(':docs-langlib-array-functions-fromBase16').projectDir = file('content.en/docs/langlib/array/functions/fromBase16')
project(':docs-langlib-array-functions-fromBase64').projectDir = file('content.en/docs/langlib/array/functions/fromBase64')
project(':docs-langlib-array-functions-indexOf').projectDir = file('content.en/docs/langlib/array/functions/indexOf')
project(':docs-langlib-array-functions-iterator').projectDir = file('content.en/docs/langlib/array/functions/iterator')
project(':docs-langlib-array-functions-lastIndexOf').projectDir = file('content.en/docs/langlib/array/functions/lastIndexOf')
project(':docs-langlib-array-functions-length').projectDir = file('content.en/docs/langlib/array/functions/length')
project(':docs-langlib-array-functions-map').projectDir = file('content.en/docs/langlib/array/functions/map')
project(':docs-langlib-array-functions-pop').projectDir = file('content.en/docs/langlib/array/functions/pop')
project(':docs-langlib-array-functions-push').projectDir = file('content.en/docs/langlib/array/functions/push')
project(':docs-langlib-array-functions-reduce').projectDir = file('content.en/docs/langlib/array/functions/reduce')
project(':docs-langlib-array-functions-remove').projectDir = file('content.en/docs/langlib/array/functions/remove')
project(':docs-langlib-array-functions-removeAll').projectDir = file('content.en/docs/langlib/array/functions/removeAll')
project(':docs-langlib-array-functions-reverse').projectDir = file('content.en/docs/langlib/array/functions/reverse')
project(':docs-langlib-array-functions-setLength').projectDir = file('content.en/docs/langlib/array/functions/setLength')
project(':docs-langlib-array-functions-shift').projectDir = file('content.en/docs/langlib/array/functions/shift')
project(':docs-langlib-array-functions-slice').projectDir = file('content.en/docs/langlib/array/functions/slice')
project(':docs-langlib-array-functions-some').projectDir = file('content.en/docs/langlib/array/functions/some')
project(':docs-langlib-array-functions-sort').projectDir = file('content.en/docs/langlib/array/functions/sort')
project(':docs-langlib-array-functions-toBase16').projectDir = file('content.en/docs/langlib/array/functions/toBase16')
project(':docs-langlib-array-functions-toBase64').projectDir = file('content.en/docs/langlib/array/functions/toBase64')
project(':docs-langlib-array-functions-toStream').projectDir = file('content.en/docs/langlib/array/functions/toStream')
project(':docs-langlib-array-functions-unshift').projectDir = file('content.en/docs/langlib/array/functions/unshift')



include(':docs-langlib-boolean')
include(':docs-langlib-boolean-functions')
project(':docs-langlib-boolean').projectDir = file('content.en/docs/langlib/boolean/')
project(':docs-langlib-boolean-functions').projectDir = file('content.en/docs/langlib/boolean/functions/')
include(':docs-langlib-decimal')
project(':docs-langlib-decimal').projectDir = file('content.en/docs/langlib/decimal/')
include(':docs-langlib-error')
project(':docs-langlib-error').projectDir = file('content.en/docs/langlib/error/')
include(':docs-langlib-float')
project(':docs-langlib-float').projectDir = file('content.en/docs/langlib/float/')
include(':docs-langlib-function')
project(':docs-langlib-function').projectDir = file('content.en/docs/langlib/function/')
include(':docs-langlib-future')
project(':docs-langlib-future').projectDir = file('content.en/docs/langlib/future/')
include(':docs-langlib-int')
project(':docs-langlib-int').projectDir = file('content.en/docs/langlib/int/')
include(':docs-langlib-map')
project(':docs-langlib-map').projectDir = file('content.en/docs/langlib/map/')
include(':docs-langlib-object')
project(':docs-langlib-object').projectDir = file('content.en/docs/langlib/object/')
include(':docs-langlib-regexp')
project(':docs-langlib-regexp').projectDir = file('content.en/docs/langlib/regexp/')
include(':docs-langlib-runtime')
project(':docs-langlib-runtime').projectDir = file('content.en/docs/langlib/runtime/')
include(':docs-langlib-stream')
project(':docs-langlib-stream').projectDir = file('content.en/docs/langlib/stream/')
include(':docs-langlib-string')
project(':docs-langlib-string').projectDir = file('content.en/docs/langlib/string/')
include(':docs-langlib-table')
project(':docs-langlib-table').projectDir = file('content.en/docs/langlib/table/')
include(':docs-langlib-transaction')
project(':docs-langlib-transaction').projectDir = file('content.en/docs/langlib/transaction/')
include(':docs-langlib-typedesc')
project(':docs-langlib-typedesc').projectDir = file('content.en/docs/langlib/typedesc/')
include(':docs-langlib-value')
project(':docs-langlib-value').projectDir = file('content.en/docs/langlib/value/')
include(':docs-langlib-xml')
project(':docs-langlib-xml').projectDir = file('content.en/docs/langlib/xml/')

// Add syntax
include(':docs-syntax-comment')
project(':docs-syntax-comment').projectDir = file('content.en/docs/syntax/comments/')

// Add types

// Add types simple types; boolean, decimal, float, int, nil
include(':docs-types-simple-boolean')
project(':docs-types-simple-boolean').projectDir = file('content.en/docs/types/simple/boolean/')
include(':docs-types-simple-decimal')
project(':docs-types-simple-decimal').projectDir = file('content.en/docs/types/simple/decimal/')
include(':docs-types-simple-float')
project(':docs-types-simple-float').projectDir = file('content.en/docs/types/simple/float/')
include(':docs-types-simple-int')
project(':docs-types-simple-int').projectDir = file('content.en/docs/types/simple/int/')
include(':docs-types-simple-nil')
project(':docs-types-simple-nil').projectDir = file('content.en/docs/types/simple/nil/')