<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ðŸ’¡ Ballerina Coding Tips on Ballerina Coding Tips</title><link>https://bal.tips/</link><description>Recent content in ðŸ’¡ Ballerina Coding Tips on Ballerina Coding Tips</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Hasitha Aravinda</copyright><atom:link href="https://bal.tips/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, World!</title><link>https://bal.tips/examples/helloworld/main/</link><pubDate>Sun, 03 Jul 2022 01:01:27 +0530</pubDate><guid>https://bal.tips/examples/helloworld/main/</guid><description>&lt;p>Writing a simple &lt;em>Hello, World!&lt;/em> is easy&amp;hellip;! Let&amp;rsquo;s write something to &lt;em>stdout&lt;/em> first.&lt;/p></description></item><item><title>Nil - ()</title><link>https://bal.tips/types/simple/nil/</link><pubDate>Tue, 05 Jul 2022 22:58:27 +0530</pubDate><guid>https://bal.tips/types/simple/nil/</guid><description>&lt;p>The nil basic data type represents A single value, that represents absence of any other value.&lt;/p></description></item><item><title>Nil Literal</title><link>https://bal.tips/examples/expr/literals/nil-literal/</link><pubDate>Tue, 05 Jul 2022 16:12:28 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/nil-literal/</guid><description>&lt;p>The &lt;code>nil&lt;/code> basic type has only a single value called &lt;code>nil&lt;/code>. So, both the type and the value use the syntax &lt;code>()&lt;/code>.&lt;/p></description></item><item><title>Null Literal</title><link>https://bal.tips/examples/expr/literals/null-literal/</link><pubDate>Tue, 05 Jul 2022 16:12:28 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/null-literal/</guid><description>&lt;p>For JSON compatibility you can also write &lt;code>()&lt;/code> as &lt;code>null&lt;/code>. This will help you to copy and paste JSON values as expressions in the code. But avoid using &lt;code>null&lt;/code> in non-JSON-related places.&lt;/p></description></item><item><title>Boolean</title><link>https://bal.tips/types/simple/boolean/</link><pubDate>Tue, 05 Jul 2022 22:58:27 +0530</pubDate><guid>https://bal.tips/types/simple/boolean/</guid><description>&lt;p>The &lt;strong>boolean&lt;/strong> basic data type represents Boolean values; &lt;code>true&lt;/code>, &lt;code>false&lt;/code>.&lt;/p></description></item><item><title>Boolean Literal</title><link>https://bal.tips/examples/expr/literals/boolean-literal/</link><pubDate>Tue, 05 Jul 2022 20:29:45 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/boolean-literal/</guid><description>&lt;p>The &lt;code>boolean&lt;/code> basic type has only two values; boolean true is written as &lt;code>true&lt;/code> and boolean false is written as &lt;code>false&lt;/code>.&lt;/p></description></item><item><title>Int</title><link>https://bal.tips/types/simple/int/</link><pubDate>Tue, 05 Jul 2022 22:58:27 +0530</pubDate><guid>https://bal.tips/types/simple/int/</guid><description>&lt;p>The &lt;strong>int&lt;/strong> basic data type represents 64-bit signed integer values.&lt;/p></description></item><item><title>Integer Literal</title><link>https://bal.tips/examples/expr/literals/int-literal/</link><pubDate>Tue, 05 Jul 2022 16:30:10 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/int-literal/</guid><description>&lt;p>You can write integer values using a set of digits of the decimal system (Base 10 number) numbers. Digits are &lt;code>0&lt;/code>, &lt;code>1&lt;/code>, &lt;code>2&lt;/code>, &lt;code>3&lt;/code>, &lt;code>4&lt;/code>, &lt;code>5&lt;/code>, &lt;code>6&lt;/code>, &lt;code>7&lt;/code>, &lt;code>8&lt;/code>, and &lt;code>9&lt;/code>&lt;/p></description></item><item><title>Hexadecimal Integer Literal</title><link>https://bal.tips/examples/expr/literals/int-literal-hex/</link><pubDate>Tue, 05 Jul 2022 16:46:55 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/int-literal-hex/</guid><description>&lt;p>You can also write an integer using the Hexadecimal (Base 16 number) numeral system.&lt;/p></description></item><item><title>Floating Point Literal</title><link>https://bal.tips/examples/expr/literals/float-literal/</link><pubDate>Tue, 05 Jul 2022 20:49:35 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/float-literal/</guid><description>&lt;p>There are two floating point types, &lt;code>float&lt;/code> and &lt;code>decimal&lt;/code>. Both use the same decimal number (Base 10 number) literal syntax.&lt;/p></description></item><item><title>Float</title><link>https://bal.tips/types/simple/float/</link><pubDate>Tue, 05 Jul 2022 22:58:27 +0530</pubDate><guid>https://bal.tips/types/simple/float/</guid><description>&lt;p>The &lt;strong>float&lt;/strong> basic data type represents &lt;em>64-bit IEEE 754-2008 binary floating point numbers&lt;/em>.&lt;/p></description></item><item><title>Floating Point Literal With Exponent</title><link>https://bal.tips/examples/expr/literals/float-exp-literal/</link><pubDate>Tue, 05 Jul 2022 20:49:35 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/float-exp-literal/</guid><description>&lt;p>You can write floating numbers using scientific notation. Letter &lt;code>e&lt;/code> or &lt;code>E&lt;/code> is used as the exponent indicator.&lt;/p></description></item><item><title>Hexadecimal Float Literal</title><link>https://bal.tips/examples/expr/literals/float-hex-literal/</link><pubDate>Sun, 10 Jul 2022 09:16:26 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/float-hex-literal/</guid><description>&lt;p>Hexadecimal numbers start with a Hex Indicator &lt;code>0x&lt;/code> (Number zero and lowercase letter &lt;code>x&lt;/code>) or &lt;code>0X&lt;/code> (Number zero and Uppercase letter &lt;code>X&lt;/code>) Hex digits are &lt;code>0&lt;/code>, &lt;code>1&lt;/code>, &lt;code>2&lt;/code>, &lt;code>3&lt;/code>, &lt;code>4&lt;/code>, &lt;code>5&lt;/code>, &lt;code>6&lt;/code>, &lt;code>7&lt;/code>, &lt;code>8&lt;/code>, &lt;code>9&lt;/code>, &lt;code>a&lt;/code> or &lt;code>A&lt;/code>, &lt;code>b&lt;/code> or &lt;code>B&lt;/code>, &lt;code>c&lt;/code> or &lt;code>C&lt;/code>, &lt;code>d&lt;/code> or &lt;code>D&lt;/code>, &lt;code>e&lt;/code> or &lt;code>E&lt;/code>, &lt;code>f&lt;/code> or &lt;code>F&lt;/code>&lt;/p></description></item><item><title>Decimal</title><link>https://bal.tips/types/simple/decimal/</link><pubDate>Sun, 10 Jul 2022 10:35:34 +0530</pubDate><guid>https://bal.tips/types/simple/decimal/</guid><description>&lt;p>The &lt;strong>decimal&lt;/strong> basic data type represents &lt;em>128-bit IEEE 754-2008 decimal floating point values&lt;/em>.&lt;/p></description></item><item><title>String</title><link>https://bal.tips/types/sequence/string/</link><pubDate>Mon, 25 Jul 2022 21:54:48 +0530</pubDate><guid>https://bal.tips/types/sequence/string/</guid><description>&lt;p>The &lt;code>string&lt;/code> data type represents sequence of zero of more unicode characters.&lt;/p></description></item><item><title>String Literal</title><link>https://bal.tips/examples/expr/literals/string-literal/</link><pubDate>Mon, 25 Jul 2022 21:54:41 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/string-literal/</guid><description>&lt;p>You can write a string literal, by wrapping the Unicode code points using two double quotes &lt;code>&amp;quot;&lt;/code>.&lt;/p></description></item><item><title>String Escape Chars</title><link>https://bal.tips/examples/expr/literals/string-escape/</link><pubDate>Mon, 25 Jul 2022 21:54:33 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/string-escape/</guid><description>&lt;p>There are certain code points, that are not allowed inside a string literal. You can use String Escape or Numeric Escape syntaxes to provide such code points.&lt;/p></description></item><item><title>Numbers Are Immutable</title><link>https://bal.tips/examples/types/readonly/numerical/</link><pubDate>Fri, 08 Jul 2022 21:27:59 +0530</pubDate><guid>https://bal.tips/examples/types/readonly/numerical/</guid><description>&lt;p>Numerical value don&amp;rsquo;t have a storage identity, hence they are Inherently immutable (once created, it can&amp;rsquo;t be change the content of the value).&lt;/p>
&lt;p>Numbers are assignable to a &lt;code>readonly&lt;/code> variable.&lt;/p></description></item><item><title>Byte</title><link>https://bal.tips/types/subtypes/byte/</link><pubDate>Mon, 25 Jul 2022 22:51:15 +0530</pubDate><guid>https://bal.tips/types/subtypes/byte/</guid><description>&lt;p>&lt;em>byte&lt;/em> type is built-in union type, that includes &lt;em>int&lt;/em> values between 0 and 255 inclusive. (0 â‰¤ values â‰¤ 255).&lt;/p></description></item><item><title>Numerical Operations</title><link>https://bal.tips/examples/expr/numerical-operations/</link><pubDate>Sat, 09 Jul 2022 18:22:30 +0530</pubDate><guid>https://bal.tips/examples/expr/numerical-operations/</guid><description>&lt;p>&lt;em>int&lt;/em>,&lt;em>float&lt;/em>,&lt;em>decimal&lt;/em> values support multiple operators;&lt;/p>
&lt;ul>
&lt;li>Multiplicative ( &lt;code>*&lt;/code>, &lt;code>/&lt;/code>, &lt;code>%&lt;/code> )&lt;/li>
&lt;li>Additive (&lt;code>+&lt;/code>, &lt;code>-&lt;/code>)&lt;/li>
&lt;li>Relational Operations ( &lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;=&lt;/code>, &lt;code>&amp;gt;=&lt;/code>)&lt;/li>
&lt;li>Equality ( &lt;code>==&lt;/code>, &lt;code>!=&lt;/code>, &lt;code>===&lt;/code>, &lt;code>!===&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>Additionally, &lt;em>int&lt;/em> type supports following operations&lt;/p>
&lt;ul>
&lt;li>Shift Operations ( &lt;code>&amp;lt;&amp;lt;&lt;/code>,&lt;code>&amp;gt;&amp;gt;&lt;/code>, &lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code>)&lt;/li>
&lt;li>Binary bitwise (&lt;code>&amp;amp;&lt;/code>, &lt;code>^&lt;/code>, &lt;code>|&lt;/code>)&lt;/li>
&lt;li>Range Operator ( &lt;code>x ... y&lt;/code> )&lt;/li>
&lt;/ul>
&lt;p>See each section for more tips.&lt;/p>
&lt;div class="notices info" >&lt;p>&lt;p>Runtime will panic on integer overflow or on division by zero.&lt;/p>
&lt;/p>&lt;/div></description></item><item><title>Converting Numerical Values</title><link>https://bal.tips/examples/expr/casts/numerical/</link><pubDate>Fri, 08 Jul 2022 20:57:17 +0530</pubDate><guid>https://bal.tips/examples/expr/casts/numerical/</guid><description>&lt;p>Unlike some programming languages, there is no implicit conversion between Ballerina numerical types.&lt;/p></description></item><item><title>Type of a numeric literal</title><link>https://bal.tips/examples/expr/literals/numeric-literals/</link><pubDate>Thu, 28 Jul 2022 01:28:56 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/numeric-literals/</guid><description>&lt;p>A value written in a numeric-literal always represents a precise type, which is the singleton type that the literal represents. The broad type of the literal always belongs only to one of the basic types int, float, or decimal.&lt;/p>
&lt;p>For example, the type of literal &lt;code>10&lt;/code> is integer 10, and its broad type is &lt;code>int&lt;/code>. This is not always true. Depending on the context, literal &lt;code>10&lt;/code> can represent floating point value &lt;code>10.0&lt;/code> or decimal value &lt;code>10&lt;/code>.&lt;/p></description></item><item><title>Base16 Byte Array Literal</title><link>https://bal.tips/examples/expr/literals/base16literal/</link><pubDate>Mon, 25 Jul 2022 22:52:46 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/base16literal/</guid><description>&lt;p>You can use Base16 Byte Array Literal syntax to represent bytes in Hex textual form.&lt;/p></description></item><item><title>Base64 Byte Array Literal</title><link>https://bal.tips/examples/expr/literals/base64literal/</link><pubDate>Mon, 25 Jul 2022 22:52:46 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/base64literal/</guid><description>&lt;p>You can use Base64 Byte Array Literal syntax to represent bytes in Base64 encoded form.&lt;/p></description></item><item><title>Hello World API</title><link>https://bal.tips/examples/helloworld/http/service/</link><pubDate>Mon, 04 Jul 2022 01:05:24 +0530</pubDate><guid>https://bal.tips/examples/helloworld/http/service/</guid><description>&lt;p>Let&amp;rsquo;s create a &lt;em>Hello, World&lt;/em> HTTP API. This API will accept HTTP get request at &lt;code>http://localhost:8080/greeting&lt;/code>.&lt;/p></description></item><item><title>lang.int Lang Library</title><link>https://bal.tips/examples/langlib/int/intro/</link><pubDate>Fri, 08 Jul 2022 20:46:31 +0530</pubDate><guid>https://bal.tips/examples/langlib/int/intro/</guid><description>&lt;p>&lt;code>lang.int&lt;/code> Lang Library provides a set of functions that operates on an integer value. See available operations in
&lt;a href="https://ballerina.io/spec/lang/master/#lang.int" target="_blank">ballerina/lang.int&amp;nbsp;&lt;span class="fa fa-external-link" style="font-size: 75%"aria-hidden="true">&lt;/span>&lt;/a>
module.&lt;/p></description></item><item><title>Byte - Ballerina vs Java</title><link>https://bal.tips/examples/types/byte/java/</link><pubDate>Tue, 26 Jul 2022 08:20:35 +0530</pubDate><guid>https://bal.tips/examples/types/byte/java/</guid><description>&lt;p>Ballerina byte type vs Java byte Comparison&lt;/p>
&lt;div class="center-ele center-txt tip-data" style="">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Ballerina&lt;/th>
&lt;th>Java&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Type&lt;/td>
&lt;td>&lt;em>byte&lt;/em>&lt;/td>
&lt;td>&lt;em>byte&lt;/em> or &lt;em>java.lang.Byte&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Signed&lt;/td>
&lt;td>Unsigned&lt;/td>
&lt;td>Signed**&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Max value&lt;/td>
&lt;td>255&lt;/td>
&lt;td>127&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Min value&lt;/td>
&lt;td>0&lt;/td>
&lt;td>-128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>0000 0000&lt;/code>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>0000 0001&lt;/code>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>0111 1111&lt;/code>&lt;/td>
&lt;td>127&lt;/td>
&lt;td>127&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>1000 0000&lt;/code>&lt;/td>
&lt;td>128&lt;/td>
&lt;td>-128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>1000 0001&lt;/code>&lt;/td>
&lt;td>129&lt;/td>
&lt;td>-127 (= -128 + 1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>1111 1111&lt;/code>&lt;/td>
&lt;td>255&lt;/td>
&lt;td>-1 (= -128 + 127)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>** Read
&lt;a href="https://en.wikipedia.org/wiki/Two%27s_complement" target="_blank">Two&amp;rsquo;s Complement&amp;nbsp;&lt;span class="fa fa-external-link" style="font-size: 75%"aria-hidden="true">&lt;/span>&lt;/a>
&lt;/p></description></item><item><title>Literals</title><link>https://bal.tips/learn-syntax/expr/literals/</link><pubDate>Fri, 01 Jul 2022 22:19:42 +0530</pubDate><guid>https://bal.tips/learn-syntax/expr/literals/</guid><description>&lt;p>Let&amp;rsquo;s see what are the literals supported. Check the
&lt;a href="https://ballerina.io/spec/lang/2022R1/#section_6.5" target="_blank">Literals&amp;nbsp;&lt;span class="fa fa-external-link" style="font-size: 75%"aria-hidden="true">&lt;/span>&lt;/a>
section of the Ballerina Language spec too.&lt;/p></description></item><item><title/><link>https://bal.tips/_footer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bal.tips/_footer/</guid><description> Bal.tips 2022 Hasitha Aravinda&amp;nbsp; . Built using docdock&amp;nbsp; and Hugo&amp;nbsp;</description></item><item><title/><link>https://bal.tips/_header/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bal.tips/_header/</guid><description> ðŸ’¡ Ballerina Tips</description></item><item><title/><link>https://bal.tips/_menu-footer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bal.tips/_menu-footer/</guid><description>About All Examples Thank you Copyright About Author&amp;nbsp; Website Source&amp;nbsp; Report an Issue&amp;nbsp; Links Ballerina.io&amp;nbsp; Ballerina By Examples&amp;nbsp; Ballerina Language Specification&amp;nbsp; Bal.tips - A Blog by Hasitha Aravinda&amp;nbsp; .</description></item><item><title>Copyright</title><link>https://bal.tips/copyright/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bal.tips/copyright/</guid><description>Content &amp;nbsp; This work including the content of pages, tips etc. is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License&amp;nbsp; by Hasitha Aravinda&amp;nbsp; .
&amp;nbsp; All Ballerina Example Source in this website are licensed under MIT License&amp;nbsp; , unless explicitly mention in the top of the source code.
Terms and Trademarks Ballerina Ballerina is an open-source programming language for the cloud that makes it easier to use, combine, and create network services - ballerina.</description></item><item><title>Thank you</title><link>https://bal.tips/thankyou/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bal.tips/thankyou/</guid><description>When I built this website, I was inspired by multiple Hugo themes. I built this re-using and modifying some of the Hugo themes content. Thank you original authors for their hard work and for making this website simple, clean, and beautiful.
Primary Theme - hugo-theme-docdock&amp;nbsp; by vjeantet&amp;nbsp; MIT license. Short Codes inspirations Tabs from hugo-theme-learn&amp;nbsp; by matcornic&amp;nbsp; - MIT license. hugo-book&amp;nbsp; by alex-shpak&amp;nbsp; - MIT license.</description></item></channel></rss>