<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Functions on Ballerina Tips</title><link>https://bal.tips/docs/langlib/array/functions/</link><description>Recent content in Functions on Ballerina Tips</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://bal.tips/docs/langlib/array/functions/index.xml" rel="self" type="application/rss+xml"/><item><title>`length`</title><link>https://bal.tips/docs/langlib/array/functions/length/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/length/</guid><description>length # [🍎, 🍇, 🍌, 🍓].length() ➜ 4 The length function is used to determine the number of elements in a list. When this function is called with a list as its input parameter, it returns an int value that represents the number of elements in the list.
Examples # 1import ballerina/io; 2 3public function main() { 4 // Array of strings 5 string[] names = [&amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Charlie&amp;#34;]; 6 io:println(&amp;#34;Length of names: &amp;#34;, names.</description></item><item><title>`iterator`</title><link>https://bal.tips/docs/langlib/array/functions/iterator/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/iterator/</guid><description>iterator # [🍎, 🍇, 🍌, 🍓].iterator().next() ➜ { value : 🍎 } The iterator function in Ballerina is used to create an iterator object for an input list. An iterator is an object that can be used to iterate over the members of a list value in a controlled manner. When the iterator function is called with a list as its input parameter, it returns a new iterator object that can be used to iterate over the member of the input list.</description></item><item><title>`enumerate`</title><link>https://bal.tips/docs/langlib/array/functions/enumerate/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/enumerate/</guid><description>enumerate # [🍎, 🍇, 🍌, 🍓].enumerate() ➜ [[0, 🍎], [1, 🍇], [2, 🍌], [3, 🍓]] The enumerate function creates a new list value that contains pairs of index and member values from the input array. In other words, it associates each member in the input array with its corresponding index, and returns a new list of these index-member pairs.
Examples # Array # 1import ballerina/io; 2 3public function main() { 4 5 string[] names = [&amp;#34;Alice&amp;#34;, &amp;#34;Bob&amp;#34;, &amp;#34;Charlie&amp;#34;]; 6 7 [int, string][] pairs = names.</description></item><item><title>`map`</title><link>https://bal.tips/docs/langlib/array/functions/map/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/map/</guid><description>map # [🍎, 🍇, 🍌, 🍓].map(makeCandy) ➜ [🍫, 🍬, 🍭, 🍰] The map function applies a given function to each member of a list in order and returns a new list containing the result of applying the function to each member of the original list.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`forEach`</title><link>https://bal.tips/docs/langlib/array/functions/forEach/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/forEach/</guid><description>forEach # [🍎, 🍇, 🍌, 🍓].foreach(PrintName) ➜ Apples, Grapes, Bananas, Strawberries The forEach function applies a given function to each member of a list in order. It iterates over the list and calls the function with each list member as its argument.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`filter`</title><link>https://bal.tips/docs/langlib/array/functions/filter/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/filter/</guid><description>filter # [🍎, 🍇, 🍌, 🍓].filter(isRed) ➜ [🍎, 🍓] The filter function selects the members from a list for which a function returns true. It applies the given function to each list member to test whether it should be selected, and returns a new list containing only the members of the original list for which the function evaluates to true.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`.</description></item><item><title>`reduce`</title><link>https://bal.tips/docs/langlib/array/functions/reduce/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/reduce/</guid><description>reduce # [🍎, 🍇, 🍌, 🍓].reduce(makeJuice) ➜ 🥤 The reduce function combines the members of a list using a combining function. The combining function takes two arguments: the combined value so far, and a list member. It then returns a new combined value. The reduce function starts with an initial value for the first argument of the combining function, and then applies the combining function to each list member in order, using the current combined value and the current list member as its arguments.</description></item><item><title>`some`</title><link>https://bal.tips/docs/langlib/array/functions/some/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/some/</guid><description>some # [🍎, 🍇, 🍌, 🍓].some(isRed) ➜ true The some function tests whether a given function returns true for at least one member of a given list. It applies the function to each member of the list in order until a call returns true, or until all members have been evaluated. If the list is empty, the function returns false.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`.</description></item><item><title>`every`</title><link>https://bal.tips/docs/langlib/array/functions/every/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/every/</guid><description>every # [🍎, 🍇, 🍌, 🍓].every(isFruit) ➜ true The every function tests whether a given function returns true for every member of a list. It applies the given function to each list member in order, and stops as soon as a call returns false. If the function returns true for every member of the list, the every function returns true. If the list is empty, the every function returns true.</description></item><item><title>`slice`</title><link>https://bal.tips/docs/langlib/array/functions/slice/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/slice/</guid><description>slice # [🍎, 🍇, 🍌, 🍓].slice(1,3) ➜ [🍇, 🍌] The slice function returns a new list containing a subset of the members of a given list. The subset is defined by two indices: startIndex and endIndex. The resulting list includes all members of the original list with indices greater than or equal to startIndex, and less than endIndex.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`.</description></item><item><title>`remove`</title><link>https://bal.tips/docs/langlib/array/functions/remove/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/remove/</guid><description>remove # [🍎, 🍇, 🍌, 🍓].remove(1) ➜ 🍇 The remove function removes a member from a given list. The index argument specifies the index of the member to be removed from the list. The remove function returns the member of the list that was removed.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`removeAll`</title><link>https://bal.tips/docs/langlib/array/functions/removeAll/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/removeAll/</guid><description> removeAll # [🍎, 🍇, 🍌, 🍓].removeAll() ➜ [] The removeAll function removes all members from a given list. The arr argument specifies the list to be emptied. The function panics if any member cannot be removed.
Examples # 🚧 More Details Coming Soon! Spec Definition # # Removes all members of an array. # + arr - the array # Panics if any member cannot be removed. public isolated function removeAll((any|error)[] arr) returns () = external; removeAll documentation&amp;nbsp;-&amp;nbsp; (source : ballerina spec)</description></item><item><title>`setLength`</title><link>https://bal.tips/docs/langlib/array/functions/setLength/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/setLength/</guid><description>setLength # [🍎, 🍇, 🍌, 🍓].setLength(2) ➜ [🍎, 🍇] The setLength function changes the length of a given list to a specified value. The arr argument specifies the list of which to change the length, and the length argument specifies the new length of the list.
Examples # 🚧 More Details Coming Soon! Spec Definition # # Changes the length of an array. # # + arr - the array of which to change the length # + length - new length # `setLength(arr, 0)` is equivalent to `removeAll(arr)`.</description></item><item><title>`indexOf`</title><link>https://bal.tips/docs/langlib/array/functions/indexOf/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/indexOf/</guid><description>indexOf # [🍎, 🍇, 🍌, 🍓].indexOf(🍌) ➜ 2 The indexOf function returns the index of the first member of a given list that is equal to a specified value. The arr argument specifies the list to be searched, and the val argument specifies the value to search for. The startIndex argument specifies the index at which to start the search. The indexOf function returns the index of the first member that is equal to val, if there is one, and () otherwise.</description></item><item><title>`lastIndexOf`</title><link>https://bal.tips/docs/langlib/array/functions/lastIndexOf/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/lastIndexOf/</guid><description>lastIndexOf # [🍎, 🍌, 🍌, 🍓].lastIndexOf(🍌) ➜ 2 The lastIndexOf function returns the index of the last member of a given list that is equal to a specified value. The arr argument specifies the list to be searched, and the val argument specifies the value to search for. The startIndex argument specifies the index at which to start searching backwards. The lastIndexOf function returns the index of the last member that is equal to val, if there is one, and () otherwise.</description></item><item><title>`reverse`</title><link>https://bal.tips/docs/langlib/array/functions/reverse/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/reverse/</guid><description>reverse # [🍎, 🍇, 🍌, 🍓].reverse() ➜ [🍓, 🍌, 🍇, 🍎] The reverse function reverses the order of the members in a given list. The arr argument specifies the list to be reversed. The function returns a new list containing the members of the original list in reverse order.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`sort`</title><link>https://bal.tips/docs/langlib/array/functions/sort/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/sort/</guid><description>sort # [🍎, 🍇, 🍌, 🍓].sort(byName) ➜ [🍎, 🍌, 🍇, 🍓] The sort function sorts the members of a given list. The arr argument specifies the list to be sorted. The direction argument specifies the direction in which to sort the list, which can be either ASCENDING or DESCENDING. The key argument is an optional function that returns a key to use to sort the members.
If the member type of the list is not sortable, then the key function must be specified to extract a comparable key from each member.</description></item><item><title>`pop`</title><link>https://bal.tips/docs/langlib/array/functions/pop/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/pop/</guid><description>pop # [🍎, 🍇, 🍌, 🍓].pop() ➜ 🍓 The pop function removes and returns the last member of a given list. The arr argument specifies the list from which to remove the last member. The function returns the removed member.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`push`</title><link>https://bal.tips/docs/langlib/array/functions/push/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/push/</guid><description>push # [🍎, 🍇, 🍌, 🍓].push(🍒, 🍉) ➜ [🍎, 🍌, 🍇, 🍓, 🍒, 🍉] The push function adds one or more values to the end of a given list. The arr argument specifies the list to which the values will be added, and the vals argument is a variable-length argument that can contain one or more values to add to the list.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`.</description></item><item><title>`shift`</title><link>https://bal.tips/docs/langlib/array/functions/shift/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/shift/</guid><description>shift # [🍎, 🍇, 🍌, 🍓].shift() ➜ 🍎 The shift function removes and returns the first member of a given list. The arr argument specifies the list from which to remove the first member. The function returns the removed member.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item><item><title>`unshift`</title><link>https://bal.tips/docs/langlib/array/functions/unshift/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/unshift/</guid><description>unshift # [🍎, 🍇, 🍌, 🍓].unshift(🍒, 🍉) ➜ [🍒, 🍉, 🍎, 🍌, 🍇, 🍓] The unshift function adds one or more values to the start of a given list. The arr argument specifies the list to which the values will be added, and the vals argument is a variable-length argument that can contain one or more values to add to the list.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`.</description></item><item><title>`toBase64`</title><link>https://bal.tips/docs/langlib/array/functions/toBase64/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/toBase64/</guid><description>toBase64 # toBase64([72, 101, 108, 108, 111]) ➜ SGVsbG8= The toBase64 function returns a string that is the Base64 representation of an array of bytes. The arr argument specifies the array of bytes to be encoded.
The Base64 representation returned by the toBase64 function is the same as used by a Ballerina Base64Literal. The resulting string will contain only characters A..Z, a..z, 0..9, +, / and =, and there will be no whitespace in the returned string.</description></item><item><title>`fromBase64`</title><link>https://bal.tips/docs/langlib/array/functions/fromBase64/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/fromBase64/</guid><description>fromBase16 # fromBase64(&amp;quot;SGVsbG8=&amp;quot;) ➜ [72, 101, 108, 108, 111] The fromBase64 function returns the byte array that a string represents in Base64. The str argument specifies the Base64-encoded string to be decoded.
The str argument must consist of the characters A..Z, a..z, 0..9, +, / and =, and whitespace as allowed by a Ballerina Base64Literal.
Examples # 🚧 More Details Coming Soon! Spec Definition # # Returns the byte array that a string represents in Base64.</description></item><item><title>`toBase16`</title><link>https://bal.tips/docs/langlib/array/functions/toBase16/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/toBase16/</guid><description>toBase16 # toBase16([72, 101, 108, 108, 111]) ➜ 48656c6c6f The toBase16 function returns a string that represents the Base16 (hexadecimal) encoding of an array of bytes. The resulting string contains only characters 0..9 and a..f and has no whitespace.
Examples # 🚧 More Details Coming Soon! Spec Definition # # Returns the string that is the Base16 representation of an array of bytes. # The representation is the same as used by a Ballerina Base16Literal.</description></item><item><title>`fromBase16`</title><link>https://bal.tips/docs/langlib/array/functions/fromBase16/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/fromBase16/</guid><description>fromBase16 # fromBase16(&amp;quot;48656c6c6f=&amp;quot;) ➜ [72, 101, 108, 108, 111] The fromBase16 function takes a Base16 string as input and returns the corresponding byte array. The fromBase16 function assumes that the input string contains only characters 0..9, A..F, and a..f, and has no whitespace.
Examples # 🚧 More Details Coming Soon! Spec Definition # # Returns the byte array that a string represents in Base16. # `str` must consist of the characters `0.</description></item><item><title>`toStream `</title><link>https://bal.tips/docs/langlib/array/functions/toStream/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://bal.tips/docs/langlib/array/functions/toStream/</guid><description>toStream # The toStream function takes a list as input and returns a stream that contains the members of the list. The toStream function is useful when you want to use the functional programming capabilities of Ballerina, such as filtering and mapping, with an array.
Examples # 🚧 More Details Coming Soon! Spec Definition # # A type parameter that is a subtype of `any|error`. # Has the special semantic that when used in a declaration # all uses in the declaration must refer to same type.</description></item></channel></rss>