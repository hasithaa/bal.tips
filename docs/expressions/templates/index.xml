<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Template Expressions on Ballerina Coding Tips</title><link>http://bal.tips/docs/expressions/templates/</link><description>Recent content in Template Expressions on Ballerina Coding Tips</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 01 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://bal.tips/docs/expressions/templates/index.xml" rel="self" type="application/rss+xml"/><item><title>String Template</title><link>http://bal.tips/docs/expressions/templates/string/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>http://bal.tips/docs/expressions/templates/string/</guid><description>String Template Expression A String template expression constructs a string value using the Template expression.
✍ Syntax String Template string ` BacktickItem* Dollar* `
Here
BacktickItem := BacktickSafeChar| BacktickDollarsSafeChar| Dollar* interpolation interpolation := ${ expression } BacktickSafeChar := ^ ( ` | $ ) BacktickDollarsSafeChar := $+ ^ ( { | ` | $) Dollar := $ ✍ Syntax String Template syntax support interpolation (Syntax ${expr}) and each interpolation expression must have a type that is a subtype of boolean|int|float|decimal|string.</description></item><item><title>XML Template</title><link>http://bal.tips/docs/expressions/templates/xml/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>http://bal.tips/docs/expressions/templates/xml/</guid><description>XML Template Expression You can use XML template expression to construct an XML value.
✍ Syntax XML Template xml ` BacktickItem* Dollar* `
Here
BacktickItem := BacktickSafeChar| BacktickDollarsSafeChar| Dollar* interpolation interpolation := ${ expression } BacktickSafeChar := ^ ( ` | $ ) BacktickDollarsSafeChar := $+ ^ ( { | ` | $) Dollar := $ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import ballerina/io; public function main() { string name = &amp;#34;tom&amp;#34;; int age = 25; xml person = xml ` &amp;lt;person&amp;gt; &amp;lt;name&amp;gt;${name}&amp;lt;/name&amp;gt; &amp;lt;age&amp;gt;${age}&amp;lt;/age&amp;gt; &amp;lt;/person&amp;gt;`; io:println(person); } &amp;nbsp;bal run&amp;nbsp;xml_template.</description></item><item><title>Raw Template Expression</title><link>http://bal.tips/docs/expressions/templates/raw/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>http://bal.tips/docs/expressions/templates/raw/</guid><description>Raw Template Expression Raw Template expression constructs an object belonging to the `object:RawTemplate object type.
✍ Syntax XML Template ` BacktickItem* Dollar* `
Here
BacktickItem := BacktickSafeChar| BacktickDollarsSafeChar| Dollar* interpolation interpolation := ${ expression } BacktickSafeChar := ^ ( ` | $ ) BacktickDollarsSafeChar := $+ ^ ( { | ` | $) Dollar := $ 1 2 3 4 5 6 7 8 9 10 11 import ballerina/io; public function main() { string name = &amp;#34;&amp;#34;; int age = 30; object:RawTemplate tmp = `My name is ${name}.</description></item></channel></rss>