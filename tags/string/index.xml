<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>string on Ballerina Coding Tips</title><link>https://bal.tips/tags/string/</link><description>Recent content in string on Ballerina Coding Tips</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Hasitha Aravinda</copyright><lastBuildDate>Sun, 31 Jul 2022 07:56:53 +0530</lastBuildDate><atom:link href="https://bal.tips/tags/string/index.xml" rel="self" type="application/rss+xml"/><item><title>String</title><link>https://bal.tips/types/sequence/string/</link><pubDate>Mon, 25 Jul 2022 21:54:48 +0530</pubDate><guid>https://bal.tips/types/sequence/string/</guid><description>&lt;p>The &lt;code>string&lt;/code> data type represents sequence of zero of more unicode characters.&lt;/p></description></item><item><title>String Literal</title><link>https://bal.tips/examples/expr/literals/string-literal/</link><pubDate>Mon, 25 Jul 2022 21:54:41 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/string-literal/</guid><description>&lt;p>You can write a string literal, by wrapping the Unicode code points using two double quotes &lt;code>&amp;quot;&lt;/code>.&lt;/p></description></item><item><title>String Escape Chars</title><link>https://bal.tips/examples/expr/literals/string-escape/</link><pubDate>Mon, 25 Jul 2022 21:54:33 +0530</pubDate><guid>https://bal.tips/examples/expr/literals/string-escape/</guid><description>&lt;p>There are certain code points, that are not allowed inside a string literal. You can use String Escape or Numeric Escape syntaxes to provide such code points.&lt;/p></description></item><item><title>String Templates</title><link>https://bal.tips/examples/expr/string-template/string-template/</link><pubDate>Sun, 31 Jul 2022 07:56:53 +0530</pubDate><guid>https://bal.tips/examples/expr/string-template/string-template/</guid><description>&lt;p>A String template expression constructs a string value using the Template expression. Support interpolation (Syntax &lt;code>${expr}&lt;/code>) and each interpolation expression must have a type that is a subtype of &lt;code>boolean|int|float|decimal|string&lt;/code>. You can use this expression in places where you use string concatenation, or you need to build multi-line string values.&lt;/p></description></item></channel></rss>