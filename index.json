[{"uri":"https://bal.tips/examples/helloworld/main/","title":"Hello World","tags":["hello-world","io:println"],"description":"","content":"Writing a simple Hello, World is easy\u0026hellip;! Let\u0026rsquo;s write something to stdout first.\nmain.bal main.out 1 2 3 4 5 import ballerina/io; public function main() { io:println(\u0026#34;Hello World...!\u0026#34;); } View Source (main.bal) 1 Hello World...! View Source (main.out) How to run this example? Download main.bal file. Open the terminal and cd to the main.bal file location. There are two ways to run this. Execute it directly using bal run main.bal command. Build the executable jar file first using bal build main.bal. Then run it using bal run main.jar "},{"uri":"https://bal.tips/helloworld/","title":"Hello World","tags":["hello-world"],"description":"","content":"This Collection contains various Hello World examples written in Ballerina\nHello World hello-world io:println Writing a simple Hello, World is easy\u0026hellip;! Let\u0026rsquo;s write something to stdout first.\nmain.bal main.out 1 2 3 4 5 import ballerina/io; public function main() { io:println(\u0026#34;Hello World...!\u0026#34;); } View Source (main.bal) 1 Hello World...! View Source (main.out) How to run this example? Download main.bal file. Open the terminal and cd to the main.bal file location. There are two ways to run this. Execute it directly using bal run main.bal command. Build the executable jar file first using bal build main.bal. Then run it using bal run main.jar Hello World API hello-world http:service Let\u0026rsquo;s create a Hello, World HTTP API. This API will accept HTTP get request at http://localhost:8080/greeting. I will use ballerina/http module to implement this API.\nservice.bal 1 2 3 4 5 6 7 8 9 10 11 import ballerina/http; service on new http:Listener(8080) { resource function get greeting(string? name) returns json { if name == () { return {\u0026#34;content\u0026#34;: \u0026#34;Hello, World!\u0026#34;}; } string content = string `Hello, ${name}!`; return {\u0026#34;content\u0026#34;: content}; } } View Source (service.bal) How to run this example? Download service.bal file and start the program using bal run service.bal command. Visit http://localhost:8080/greeting. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, World!\u0026quot;} JSON output. Now let\u0026rsquo;s try providing a value to the name query parameter. Visit http://localhost:8080/greeting?name=Ballerina. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, Ballerina!\u0026quot;} JSON output. "},{"uri":"https://bal.tips/examples/","title":"All Ballerina Examples","tags":[],"description":"","content":" Hello World Writing a Simple Hello World\nHello World API Writing a Simple HTTP Hello World API\n"},{"uri":"https://bal.tips/examples/helloworld/http/service/","title":"Hello World API","tags":["hello-world","http:service"],"description":"","content":"Let\u0026rsquo;s create a Hello, World HTTP API. This API will accept HTTP get request at http://localhost:8080/greeting. I will use ballerina/http module to implement this API.\nservice.bal 1 2 3 4 5 6 7 8 9 10 11 import ballerina/http; service on new http:Listener(8080) { resource function get greeting(string? name) returns json { if name == () { return {\u0026#34;content\u0026#34;: \u0026#34;Hello, World!\u0026#34;}; } string content = string `Hello, ${name}!`; return {\u0026#34;content\u0026#34;: content}; } } View Source (service.bal) How to run this example? Download service.bal file and start the program using bal run service.bal command. Visit http://localhost:8080/greeting. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, World!\u0026quot;} JSON output. Now let\u0026rsquo;s try providing a value to the name query parameter. Visit http://localhost:8080/greeting?name=Ballerina. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, Ballerina!\u0026quot;} JSON output. "},{"uri":"https://bal.tips/tags/hello-world/","title":"hello-world","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/httpservice/","title":"http:service","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/ioprintln/","title":"io:println","tags":[],"description":"","content":""},{"uri":"https://bal.tips/_footer/","title":"","tags":[],"description":"","content":"Bal.tips 2022, A Blog by Hasitha Aravinda.\nBallerina is a trademark of WSO2, Inc. All other marks and logos are property of their respective owners. Built using docdock and Hugo\n"},{"uri":"https://bal.tips/","title":"Ballerina Tips","tags":[],"description":"","content":"Welcome to Bal.Tips\n"},{"uri":"https://bal.tips/thank-you/","title":"Thank you","tags":[],"description":"","content":"When I built this website, I was inspired by multiple Hugo themes. I built this re-using and modifying some of the Hugo themes content. Thank you original authors for their hard work and for making this website simple, clean, and beautiful.\nPrimary Theme - hugo-theme-docdock by vjeantet MIT license. Short Codes inspirations Tabs from hugo-theme-learn by matcornic - MIT license. hugo-book by alex-shpak - MIT license. "}]