[{"uri":"https://bal.tips/examples/helloworld/main/","title":"Hello, World!","tags":["hello-world","io:println"],"description":"","content":"Writing a simple Hello, World! is easy\u0026hellip;! Let\u0026rsquo;s write something to stdout first.\nmain.bal main.out 1 2 3 4 5 import ballerina/io; public function main() { io:println(\u0026#34;Hello, World...!\u0026#34;); } Ballerina 2201.1.1 - View Source 1 Hello, World...! View Source How to run this example? Download main.bal file. Open the terminal and cd to the main.bal file location. There are two ways to run this. Execute it directly using bal run main.bal command. Build the executable jar file first using bal build main.bal. Then run it using bal run main.jar "},{"uri":"https://bal.tips/helloworld/","title":"Hello, World!","tags":["hello-world"],"description":"","content":"This Collection contains various Hello, World! examples written in Ballerina\nRelated Tips ðŸ’¡\u0026nbsp;Hello, World! ðŸ’¡\u0026nbsp;Hello World API ðŸ’¡\u0026nbsp;\u0026nbsp;Hello, World! Writing a simple Hello, World! is easy\u0026hellip;! Let\u0026rsquo;s write something to stdout first.\n\u0026nbsp;See more main.bal main.out 1 2 3 4 5 import ballerina/io; public function main() { io:println(\u0026#34;Hello, World...!\u0026#34;); } Ballerina 2201.1.1 - View Source 1 Hello, World...! View Source hello-world io:println ðŸ’¡\u0026nbsp;\u0026nbsp;Hello World API Let\u0026rsquo;s create a Hello, World HTTP API. This API will accept HTTP get request at http://localhost:8080/greeting.\n\u0026nbsp;See more service.bal 1 2 3 4 5 6 7 8 9 10 11 import ballerina/http; service on new http:Listener(8080) { resource function get greeting(string? name) returns json { if name == () { return {\u0026#34;content\u0026#34;: \u0026#34;Hello, World!\u0026#34;}; } string content = string `Hello, ${name}!`; return {\u0026#34;content\u0026#34;: content}; } } Ballerina 2201.1.1 - View Source hello-world http:service "},{"uri":"https://bal.tips/types/","title":"Ballerina Type Guide","tags":[],"description":"","content":"This collection covers Ballerina type system.\nNil - () The nil basic data type represents A single value, that represents absence of any other value.\nBoolean The boolean basic data type represents Boolean values; true, false.\nInt The int basic data type represents 64-bit signed integer values.\nFloat The float basic data type represents 64-bit IEEE 754-2008 binary floating point numbers.\nDecimal The decimal basic data type represents 128-bit IEEE 754-2008 decimal floating point values.\nThis page is under construction. The page content is updated dynamically and may change in the future including the structure. Refer with caution.\n"},{"uri":"https://bal.tips/learn-syntax/","title":"Ballerina Syntax Guide","tags":[],"description":"","content":"Let\u0026rsquo;s see various Ballerina syntaxes.\nLiterals This section covers Literals section of the Ballerina Language spec.\nThis page is under construction. The page content is updated dynamically and may change in the future including the structure. Refer with caution.\n"},{"uri":"https://bal.tips/examples/","title":"All Ballerina Examples","tags":[],"description":"","content":" Hello, World! Nil Literal Boolean Literal Integer Literal Hexadecimal Integer Literal Floating Point Literal Floating Point Literal With Exponent Hexadecimal Float Literal Numbers Are Immutable Numerical Operations Converting Numerical Values Hello World API lang.int Lang Library "},{"uri":"https://bal.tips/types/simple/nil/","title":"Nil - ()","tags":["nil"],"description":"","content":"The nil basic data type represents A single value, that represents absence of any other value.\nRelated Tips ðŸ’¡\u0026nbsp;Nil Literal ðŸ’¡\u0026nbsp;\u0026nbsp;Nil Literal The nil basic type has only a single value called nil. So, both the type and the value use the syntax ().\n\u0026nbsp;See more nil-literal.bal nil-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { () a = (); () b = null; null c = null; // Also valid io:println(\u0026#34;a:\u0026#34;, a); io:println(\u0026#34;b:\u0026#34;, b); io:println(\u0026#34;c:\u0026#34;, c); // Using JSON value as expr json tom = {\u0026#34;name\u0026#34; : \u0026#34;tom\u0026#34;, \u0026#34;job\u0026#34; : null}; json bob = {\u0026#34;name\u0026#34; : \u0026#34;bob\u0026#34;, \u0026#34;job\u0026#34; : ()}; io:println(\u0026#34;person:\u0026#34;, tom); io:println(\u0026#34;person:\u0026#34;, bob); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 a: b: c: person:{\u0026#34;name\u0026#34;:\u0026#34;tom\u0026#34;,\u0026#34;job\u0026#34;:null} person:{\u0026#34;name\u0026#34;:\u0026#34;bob\u0026#34;,\u0026#34;job\u0026#34;:null} View Source literal nil null "},{"uri":"https://bal.tips/examples/expr/literals/nil-literal/","title":"Nil Literal","tags":["literal","nil","null"],"description":"","content":"The nil basic type has only a single value called nil. So, both the type and the value use the syntax ().\nFor JSON compatibility you can also write it as null. This will help you to copy and paste JSON values as expressions in the code. But avoid using null in non-JSON-related places.\nnil-literal.bal nil-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { () a = (); () b = null; null c = null; // Also valid io:println(\u0026#34;a:\u0026#34;, a); io:println(\u0026#34;b:\u0026#34;, b); io:println(\u0026#34;c:\u0026#34;, c); // Using JSON value as expr json tom = {\u0026#34;name\u0026#34; : \u0026#34;tom\u0026#34;, \u0026#34;job\u0026#34; : null}; json bob = {\u0026#34;name\u0026#34; : \u0026#34;bob\u0026#34;, \u0026#34;job\u0026#34; : ()}; io:println(\u0026#34;person:\u0026#34;, tom); io:println(\u0026#34;person:\u0026#34;, bob); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 a: b: c: person:{\u0026#34;name\u0026#34;:\u0026#34;tom\u0026#34;,\u0026#34;job\u0026#34;:null} person:{\u0026#34;name\u0026#34;:\u0026#34;bob\u0026#34;,\u0026#34;job\u0026#34;:null} View Source "},{"uri":"https://bal.tips/types/simple/boolean/","title":"Boolean","tags":["boolean"],"description":"","content":"The boolean basic data type represents Boolean values; true, false.\nIn programming, boolean data type is useful to represent a binary state like, 1/0, On/Off, Yes/No or True/False etc.\nRelated Tips ðŸ’¡\u0026nbsp;Boolean Literal ðŸ’¡\u0026nbsp;\u0026nbsp;Boolean Literal The boolean basic type has only two values; boolean true is written as true and boolean false is written as false.\n\u0026nbsp;See more boolean-literal.bal boolean-literal.out 1 2 3 4 5 6 7 8 9 import ballerina/io; public function main() { boolean enable = true; boolean open = false; io:println(enable); // true io:println(open); // false } Ballerina 2201.1.1 - View Source 1 2 true false View Source literal boolean "},{"uri":"https://bal.tips/examples/expr/literals/boolean-literal/","title":"Boolean Literal","tags":["literal","boolean"],"description":"","content":"The boolean basic type has only two values; boolean true is written as true and boolean false is written as false.\nBallerina doesn\u0026rsquo;t support 0, 1 or any other variations of true or false words as alternative syntax.\nboolean-literal.bal boolean-literal.out 1 2 3 4 5 6 7 8 9 import ballerina/io; public function main() { boolean enable = true; boolean open = false; io:println(enable); // true io:println(open); // false } Ballerina 2201.1.1 - View Source 1 2 true false View Source "},{"uri":"https://bal.tips/types/simple/int/","title":"Int","tags":["int"],"description":"","content":"The int basic data type represents 64-bit signed integer values.\nRelated Tips ðŸ’¡\u0026nbsp;Integer Literal ðŸ’¡\u0026nbsp;Hexadecimal Integer Literal ðŸ’¡\u0026nbsp;Numbers Are Immutable ðŸ’¡\u0026nbsp;Numerical Operations ðŸ’¡\u0026nbsp;Converting Numerical Values ðŸ’¡\u0026nbsp;lang.int Lang Library ðŸ’¡\u0026nbsp;\u0026nbsp;Integer Literal You can write integer values using a set of digits of the decimal system (Base 10 number) numbers. Digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9\n\u0026nbsp;See more int-literal.bal int-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0; int i2 = -10; int i3 = 100; int i4 = -100000; int i5 = 1234567890; io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 -10 100 -100000 1234567890 View Source literal int ðŸ’¡\u0026nbsp;\u0026nbsp;Hexadecimal Integer Literal You can also write an integer using the Hexadecimal (Base 16 number) numeral system.\n\u0026nbsp;See more int-literal-hex.bal int-literal-hex.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0x0; // 0; int i2 = 0xa; // 10; int i3 = 0xA; // 10; int i4 = -0xa1b2; // -41394 int i5 = 0XAb; // 171 io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 10 10 -41394 171 View Source literal int hex ðŸ’¡\u0026nbsp;\u0026nbsp;Numbers Are Immutable Numerical value don\u0026rsquo;t have a storage identity, hence they are Inherently immutable (once created, it can\u0026rsquo;t be change the content of the value).\nNumbers are assignable to a readonly variable.\nnumerical.bal numerical.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; readonly r1 = i; readonly r2 = f; readonly r3 = d; io:println(i is readonly); // true io:println(f is readonly); // true io:println(d is readonly); // true io:println(r1); io:println(r2); io:println(r3); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 true true true 10 2.1 5.0 View Source int float decimal readonly ðŸ’¡\u0026nbsp;\u0026nbsp;Numerical Operations int,float,decimal values support multiple operators;\nMultiplicative ( *, /, % ) Additive (+, -) Relational Operations ( \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=) Equality ( ==, !=, ===, !===) Additionally, int type supports following operations\nShift Operations ( \u0026lt;\u0026lt;,\u0026gt;\u0026gt;, \u0026gt;\u0026gt;\u0026gt;) Binary bitwise (\u0026amp;, ^, |) Range Operator ( x ... y ) See each section for more tips.\nRuntime will panic on integer overflow or on division by zero.\nint float decimal expr ðŸ’¡\u0026nbsp;\u0026nbsp;Converting Numerical Values Unlike some programming languages, there is no implicit conversion between Ballerina numerical types.\n\u0026nbsp;See more numerical-error.bal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; float fi = i; // ^ Error decimal di = i; // ^ Error int \u0026#39;if = f; // ^ Error decimal df = f; // ^ Error int id = d; // ^ Error float fd = d; // ^ Error int i1 = \u0026lt;int\u0026gt; f; // OK int i2 = \u0026lt;int\u0026gt; d; // OK float f1 = \u0026lt;float\u0026gt; i; // OK float f2 = \u0026lt;float\u0026gt; d; // OK decimal d1 = \u0026lt;decimal\u0026gt; i; // OK decimal d2 = \u0026lt;decimal\u0026gt; f; // OK } Ballerina 2201.1.1 - View Source int float decimal ðŸ’¡\u0026nbsp;\u0026nbsp;lang.int Lang Library lang.int Lang Library provides a set of functions that operates on an integer value. See available operations in ballerina/lang.int module.\nintro.bal intro.out 1 2 3 4 5 6 7 8 9 10 11 12 import ballerina/io; public function main() returns error? { int sum = int:sum(1, 2, 3, 4, 5); io:println(sum); int max = int:max(1, 2, 3, 4, 5); io:println(max); int i = check int:fromString(\u0026#34;123\u0026#34;); io:println(i); } Ballerina 2201.1.1 - View Source 1 2 3 15 5 123 View Source int lang.int "},{"uri":"https://bal.tips/examples/expr/literals/int-literal/","title":"Integer Literal","tags":["literal","int"],"description":"","content":"You can write integer values using a set of digits of the decimal system (Base 10 number) numbers. Digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9\nYou can make an integer value negative by writing a minus (-) sign in front of the literal. See Unary Expressions for more details.\nint-literal.bal int-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0; int i2 = -10; int i3 = 100; int i4 = -100000; int i5 = 1234567890; io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 -10 100 -100000 1234567890 View Source "},{"uri":"https://bal.tips/examples/expr/literals/int-literal-hex/","title":"Hexadecimal Integer Literal","tags":["literal","int","hex"],"description":"","content":"You can also write an integer using the Hexadecimal (Base 16 number) numeral system.\nHexadecimal numbers start with a Hex Indicator 0x (Number zero and lowercase letter x) or 0X (Number zero and Uppercase letter X) Hex digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a or A, b or B, c or C, d or D, e or E, f or F\nint-literal-hex.bal int-literal-hex.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0x0; // 0; int i2 = 0xa; // 10; int i3 = 0xA; // 10; int i4 = -0xa1b2; // -41394 int i5 = 0XAb; // 171 io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 10 10 -41394 171 View Source "},{"uri":"https://bal.tips/examples/expr/literals/float-literal/","title":"Floating Point Literal","tags":["literal","float","decimal"],"description":"","content":"There are two floating point types, float and decimal. Both use the same decimal number (Base 10 number) literal syntax.\nYou can write floating point values using a set of digits of the decimal system (Base 10 number) numbers, by using a dot . as the radix character to separate integer-part and fractional-part.\nOptionally you can write float-type-suffix character f or F precisely to say the numerical literal is a float value, Or decimal-type-suffix character d or D to say the numerical literal is a decimal value.\nDigits are 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9. You can make a floating point number negative by writing a minus (-) sign in front of the literal. See Unary Expressions for more details.\nfloat-literal.bal float-literal.out decimal-literal.bal decimal-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import ballerina/io; public function main() { float f1 = 12.345; float f2 = -5.678; float f3 = .5678; float f4 = 123.456f; float f5 = 567.8901F; float f6 = 505f; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 12.345 -5.678 0.5678 123.456 567.8901 505.0 View Source 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { decimal f1 = 12.345; decimal f2 = -5.678; decimal f3 = .5678; decimal f4 = 123.456d; decimal f5 = 567.8901D; decimal f6 = 505d; decimal f7 = 505.0d; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); io:println(f7); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 12.345 -5.678 0.5678 123.456 567.8901 505 505.0 View Source "},{"uri":"https://bal.tips/types/simple/float/","title":"Float","tags":["float"],"description":"","content":"The float basic data type represents 64-bit IEEE 754-2008 binary floating point numbers.\nRelated Tips ðŸ’¡\u0026nbsp;Floating Point Literal ðŸ’¡\u0026nbsp;Floating Point Literal With Exponent ðŸ’¡\u0026nbsp;Hexadecimal Float Literal ðŸ’¡\u0026nbsp;Numbers Are Immutable ðŸ’¡\u0026nbsp;Numerical Operations ðŸ’¡\u0026nbsp;Converting Numerical Values ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal There are two floating point types, float and decimal. Both use the same decimal number (Base 10 number) literal syntax.\n\u0026nbsp;See more float-literal.bal float-literal.out decimal-literal.bal decimal-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import ballerina/io; public function main() { float f1 = 12.345; float f2 = -5.678; float f3 = .5678; float f4 = 123.456f; float f5 = 567.8901F; float f6 = 505f; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 12.345 -5.678 0.5678 123.456 567.8901 505.0 View Source 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { decimal f1 = 12.345; decimal f2 = -5.678; decimal f3 = .5678; decimal f4 = 123.456d; decimal f5 = 567.8901D; decimal f6 = 505d; decimal f7 = 505.0d; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); io:println(f7); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 12.345 -5.678 0.5678 123.456 567.8901 505 505.0 View Source literal float decimal ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal With Exponent You can write floating numbers using scientific notation. Letter e or E is used as the exponent indicator.\nfloat-exp-literal.bal float-exp-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import ballerina/io; public function main() { float f1 = 12e4; // 120000.0 float f2 = 543e-5; // 0.00543 float f3 = 1.23e3; // 1230.0 float f4 = 1.23e3f; // 1230.0 decimal d1 = 12e4; // 120000.0 decimal d2 = 543e-5; // 0.00543 decimal d3 = 1.23e3; // 1230.0 decimal d4 = 1.23e3d; // 1230.0 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(d1); io:println(d2); io:println(d3); io:println(d4); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 8 120000.0 0.00543 1230.0 1230.0 1.2E+5 0.00543 1.23E+3 1.23E+3 View Source literal float decimal exponent ðŸ’¡\u0026nbsp;\u0026nbsp;Hexadecimal Float Literal Hexadecimal numbers start with a Hex Indicator 0x (Number zero and lowercase letter x) or 0X (Number zero and Uppercase letter X) Hex digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a or A, b or B, c or C, d or D, e or E, f or F\nfloat-hex-literal.bal float-hex-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import ballerina/io; public function main() { float f1 = 0x5.8; // 5.5 float f2 = -0x5.8; // -5.5 float f3 = 0x7b.74bc6a7ef9db22d; // 123.456 float f4 = 0X7B.74BC6A7EF9DB22D; // 123.456 float f5 = 0x1F9.A; // 505.625 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 5.5 -5.5 123.456 123.456 505.625 View Source float hex literal ðŸ’¡\u0026nbsp;\u0026nbsp;Numbers Are Immutable Numerical value don\u0026rsquo;t have a storage identity, hence they are Inherently immutable (once created, it can\u0026rsquo;t be change the content of the value).\nNumbers are assignable to a readonly variable.\nnumerical.bal numerical.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; readonly r1 = i; readonly r2 = f; readonly r3 = d; io:println(i is readonly); // true io:println(f is readonly); // true io:println(d is readonly); // true io:println(r1); io:println(r2); io:println(r3); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 true true true 10 2.1 5.0 View Source int float decimal readonly ðŸ’¡\u0026nbsp;\u0026nbsp;Numerical Operations int,float,decimal values support multiple operators;\nMultiplicative ( *, /, % ) Additive (+, -) Relational Operations ( \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=) Equality ( ==, !=, ===, !===) Additionally, int type supports following operations\nShift Operations ( \u0026lt;\u0026lt;,\u0026gt;\u0026gt;, \u0026gt;\u0026gt;\u0026gt;) Binary bitwise (\u0026amp;, ^, |) Range Operator ( x ... y ) See each section for more tips.\nRuntime will panic on integer overflow or on division by zero.\nint float decimal expr ðŸ’¡\u0026nbsp;\u0026nbsp;Converting Numerical Values Unlike some programming languages, there is no implicit conversion between Ballerina numerical types.\n\u0026nbsp;See more numerical-error.bal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; float fi = i; // ^ Error decimal di = i; // ^ Error int \u0026#39;if = f; // ^ Error decimal df = f; // ^ Error int id = d; // ^ Error float fd = d; // ^ Error int i1 = \u0026lt;int\u0026gt; f; // OK int i2 = \u0026lt;int\u0026gt; d; // OK float f1 = \u0026lt;float\u0026gt; i; // OK float f2 = \u0026lt;float\u0026gt; d; // OK decimal d1 = \u0026lt;decimal\u0026gt; i; // OK decimal d2 = \u0026lt;decimal\u0026gt; f; // OK } Ballerina 2201.1.1 - View Source int float decimal "},{"uri":"https://bal.tips/examples/expr/literals/float-exp-literal/","title":"Floating Point Literal With Exponent","tags":["literal","float","decimal","exponent"],"description":"","content":"You can write floating numbers using scientific notation. Letter e or E is used as the exponent indicator.\nfloat-exp-literal.bal float-exp-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import ballerina/io; public function main() { float f1 = 12e4; // 120000.0 float f2 = 543e-5; // 0.00543 float f3 = 1.23e3; // 1230.0 float f4 = 1.23e3f; // 1230.0 decimal d1 = 12e4; // 120000.0 decimal d2 = 543e-5; // 0.00543 decimal d3 = 1.23e3; // 1230.0 decimal d4 = 1.23e3d; // 1230.0 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(d1); io:println(d2); io:println(d3); io:println(d4); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 8 120000.0 0.00543 1230.0 1230.0 1.2E+5 0.00543 1.23E+3 1.23E+3 View Source "},{"uri":"https://bal.tips/examples/expr/literals/float-hex-literal/","title":"Hexadecimal Float Literal","tags":["float","hex","literal"],"description":"","content":"Hexadecimal numbers start with a Hex Indicator 0x (Number zero and lowercase letter x) or 0X (Number zero and Uppercase letter X) Hex digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a or A, b or B, c or C, d or D, e or E, f or F\nfloat-hex-literal.bal float-hex-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import ballerina/io; public function main() { float f1 = 0x5.8; // 5.5 float f2 = -0x5.8; // -5.5 float f3 = 0x7b.74bc6a7ef9db22d; // 123.456 float f4 = 0X7B.74BC6A7EF9DB22D; // 123.456 float f5 = 0x1F9.A; // 505.625 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 5.5 -5.5 123.456 123.456 505.625 View Source "},{"uri":"https://bal.tips/types/simple/decimal/","title":"Decimal","tags":["decimal"],"description":"","content":"The decimal basic data type represents 128-bit IEEE 754-2008 decimal floating point values.\nRelated Tips ðŸ’¡\u0026nbsp;Floating Point Literal ðŸ’¡\u0026nbsp;Floating Point Literal With Exponent ðŸ’¡\u0026nbsp;Numbers Are Immutable ðŸ’¡\u0026nbsp;Numerical Operations ðŸ’¡\u0026nbsp;Converting Numerical Values ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal There are two floating point types, float and decimal. Both use the same decimal number (Base 10 number) literal syntax.\n\u0026nbsp;See more float-literal.bal float-literal.out decimal-literal.bal decimal-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import ballerina/io; public function main() { float f1 = 12.345; float f2 = -5.678; float f3 = .5678; float f4 = 123.456f; float f5 = 567.8901F; float f6 = 505f; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 12.345 -5.678 0.5678 123.456 567.8901 505.0 View Source 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { decimal f1 = 12.345; decimal f2 = -5.678; decimal f3 = .5678; decimal f4 = 123.456d; decimal f5 = 567.8901D; decimal f6 = 505d; decimal f7 = 505.0d; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); io:println(f7); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 12.345 -5.678 0.5678 123.456 567.8901 505 505.0 View Source literal float decimal ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal With Exponent You can write floating numbers using scientific notation. Letter e or E is used as the exponent indicator.\nfloat-exp-literal.bal float-exp-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import ballerina/io; public function main() { float f1 = 12e4; // 120000.0 float f2 = 543e-5; // 0.00543 float f3 = 1.23e3; // 1230.0 float f4 = 1.23e3f; // 1230.0 decimal d1 = 12e4; // 120000.0 decimal d2 = 543e-5; // 0.00543 decimal d3 = 1.23e3; // 1230.0 decimal d4 = 1.23e3d; // 1230.0 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(d1); io:println(d2); io:println(d3); io:println(d4); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 8 120000.0 0.00543 1230.0 1230.0 1.2E+5 0.00543 1.23E+3 1.23E+3 View Source literal float decimal exponent ðŸ’¡\u0026nbsp;\u0026nbsp;Numbers Are Immutable Numerical value don\u0026rsquo;t have a storage identity, hence they are Inherently immutable (once created, it can\u0026rsquo;t be change the content of the value).\nNumbers are assignable to a readonly variable.\nnumerical.bal numerical.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; readonly r1 = i; readonly r2 = f; readonly r3 = d; io:println(i is readonly); // true io:println(f is readonly); // true io:println(d is readonly); // true io:println(r1); io:println(r2); io:println(r3); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 true true true 10 2.1 5.0 View Source int float decimal readonly ðŸ’¡\u0026nbsp;\u0026nbsp;Numerical Operations int,float,decimal values support multiple operators;\nMultiplicative ( *, /, % ) Additive (+, -) Relational Operations ( \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=) Equality ( ==, !=, ===, !===) Additionally, int type supports following operations\nShift Operations ( \u0026lt;\u0026lt;,\u0026gt;\u0026gt;, \u0026gt;\u0026gt;\u0026gt;) Binary bitwise (\u0026amp;, ^, |) Range Operator ( x ... y ) See each section for more tips.\nRuntime will panic on integer overflow or on division by zero.\nint float decimal expr ðŸ’¡\u0026nbsp;\u0026nbsp;Converting Numerical Values Unlike some programming languages, there is no implicit conversion between Ballerina numerical types.\n\u0026nbsp;See more numerical-error.bal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; float fi = i; // ^ Error decimal di = i; // ^ Error int \u0026#39;if = f; // ^ Error decimal df = f; // ^ Error int id = d; // ^ Error float fd = d; // ^ Error int i1 = \u0026lt;int\u0026gt; f; // OK int i2 = \u0026lt;int\u0026gt; d; // OK float f1 = \u0026lt;float\u0026gt; i; // OK float f2 = \u0026lt;float\u0026gt; d; // OK decimal d1 = \u0026lt;decimal\u0026gt; i; // OK decimal d2 = \u0026lt;decimal\u0026gt; f; // OK } Ballerina 2201.1.1 - View Source int float decimal "},{"uri":"https://bal.tips/examples/types/readonly/numerical/","title":"Numbers Are Immutable","tags":["int","float","decimal","readonly"],"description":"","content":"Numerical value don\u0026rsquo;t have a storage identity, hence they are Inherently immutable (once created, it can\u0026rsquo;t be change the content of the value).\nNumbers are assignable to a readonly variable.\nnumerical.bal numerical.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; readonly r1 = i; readonly r2 = f; readonly r3 = d; io:println(i is readonly); // true io:println(f is readonly); // true io:println(d is readonly); // true io:println(r1); io:println(r2); io:println(r3); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 true true true 10 2.1 5.0 View Source "},{"uri":"https://bal.tips/examples/expr/numerical-operations/","title":"Numerical Operations","tags":["int","float","decimal","expr"],"description":"","content":"int,float,decimal values support multiple operators;\nMultiplicative ( *, /, % ) Additive (+, -) Relational Operations ( \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=) Equality ( ==, !=, ===, !===) Additionally, int type supports following operations\nShift Operations ( \u0026lt;\u0026lt;,\u0026gt;\u0026gt;, \u0026gt;\u0026gt;\u0026gt;) Binary bitwise (\u0026amp;, ^, |) Range Operator ( x ... y ) See each section for more tips.\nRuntime will panic on integer overflow or on division by zero.\n"},{"uri":"https://bal.tips/examples/expr/casts/numerical/","title":"Converting Numerical Values","tags":["int","float","decimal"],"description":"","content":"Unlike some programming languages, there is no implicit conversion between Ballerina numerical types.\nIf required, you can use a type-cast expression to do a numeric conversion. This is useful when converting a mapping value to another with the same field name but with different numerical type.\nnumerical-error.bal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import ballerina/io; public function main() { int i = 10; float f = 2.1; decimal d = 5.0; float fi = i; // ^ Error decimal di = i; // ^ Error int \u0026#39;if = f; // ^ Error decimal df = f; // ^ Error int id = d; // ^ Error float fd = d; // ^ Error int i1 = \u0026lt;int\u0026gt; f; // OK int i2 = \u0026lt;int\u0026gt; d; // OK float f1 = \u0026lt;float\u0026gt; i; // OK float f2 = \u0026lt;float\u0026gt; d; // OK decimal d1 = \u0026lt;decimal\u0026gt; i; // OK decimal d2 = \u0026lt;decimal\u0026gt; f; // OK } Ballerina 2201.1.1 - View Source "},{"uri":"https://bal.tips/examples/helloworld/http/service/","title":"Hello World API","tags":["hello-world","http:service"],"description":"","content":"Let\u0026rsquo;s create a Hello, World HTTP API. This API will accept HTTP get request at http://localhost:8080/greeting.\nI will use ballerina/http module to implement this API.\nservice.bal 1 2 3 4 5 6 7 8 9 10 11 import ballerina/http; service on new http:Listener(8080) { resource function get greeting(string? name) returns json { if name == () { return {\u0026#34;content\u0026#34;: \u0026#34;Hello, World!\u0026#34;}; } string content = string `Hello, ${name}!`; return {\u0026#34;content\u0026#34;: content}; } } Ballerina 2201.1.1 - View Source How to run this example? Download service.bal file and start the program using bal run service.bal command. Visit http://localhost:8080/greeting. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, World!\u0026quot;} JSON output. Now let\u0026rsquo;s try providing a value to the name query parameter. Visit http://localhost:8080/greeting?name=Ballerina. You will see {\u0026quot;content\u0026quot;:\u0026quot;Hello, Ballerina!\u0026quot;} JSON output. "},{"uri":"https://bal.tips/examples/langlib/int/intro/","title":"lang.int Lang Library","tags":["int","lang.int"],"description":"","content":"lang.int Lang Library provides a set of functions that operates on an integer value. See available operations in ballerina/lang.int module.\nintro.bal intro.out 1 2 3 4 5 6 7 8 9 10 11 12 import ballerina/io; public function main() returns error? { int sum = int:sum(1, 2, 3, 4, 5); io:println(sum); int max = int:max(1, 2, 3, 4, 5); io:println(max); int i = check int:fromString(\u0026#34;123\u0026#34;); io:println(i); } Ballerina 2201.1.1 - View Source 1 2 3 15 5 123 View Source "},{"uri":"https://bal.tips/tags/decimal/","title":"decimal","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/float/","title":"float","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/hex/","title":"hex","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/literal/","title":"literal","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/expr/","title":"expr","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/int/","title":"int","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/readonly/","title":"readonly","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/lang.int/","title":"lang.int","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/boolean/","title":"boolean","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/nil/","title":"nil","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/exponent/","title":"exponent","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/null/","title":"null","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/hello-world/","title":"hello-world","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/httpservice/","title":"http:service","tags":[],"description":"","content":""},{"uri":"https://bal.tips/tags/ioprintln/","title":"io:println","tags":[],"description":"","content":""},{"uri":"https://bal.tips/learn-syntax/literals/","title":"Literals","tags":["literal"],"description":"","content":"This section covers Literals section of the Ballerina Language spec.\nRelated Tips ðŸ’¡\u0026nbsp;Nil Literal ðŸ’¡\u0026nbsp;Boolean Literal ðŸ’¡\u0026nbsp;Integer Literal ðŸ’¡\u0026nbsp;Hexadecimal Integer Literal ðŸ’¡\u0026nbsp;Floating Point Literal ðŸ’¡\u0026nbsp;Floating Point Literal With Exponent ðŸ’¡\u0026nbsp;Hexadecimal Float Literal ðŸ’¡\u0026nbsp;\u0026nbsp;Nil Literal The nil basic type has only a single value called nil. So, both the type and the value use the syntax ().\n\u0026nbsp;See more nil-literal.bal nil-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { () a = (); () b = null; null c = null; // Also valid io:println(\u0026#34;a:\u0026#34;, a); io:println(\u0026#34;b:\u0026#34;, b); io:println(\u0026#34;c:\u0026#34;, c); // Using JSON value as expr json tom = {\u0026#34;name\u0026#34; : \u0026#34;tom\u0026#34;, \u0026#34;job\u0026#34; : null}; json bob = {\u0026#34;name\u0026#34; : \u0026#34;bob\u0026#34;, \u0026#34;job\u0026#34; : ()}; io:println(\u0026#34;person:\u0026#34;, tom); io:println(\u0026#34;person:\u0026#34;, bob); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 a: b: c: person:{\u0026#34;name\u0026#34;:\u0026#34;tom\u0026#34;,\u0026#34;job\u0026#34;:null} person:{\u0026#34;name\u0026#34;:\u0026#34;bob\u0026#34;,\u0026#34;job\u0026#34;:null} View Source literal nil null ðŸ’¡\u0026nbsp;\u0026nbsp;Boolean Literal The boolean basic type has only two values; boolean true is written as true and boolean false is written as false.\n\u0026nbsp;See more boolean-literal.bal boolean-literal.out 1 2 3 4 5 6 7 8 9 import ballerina/io; public function main() { boolean enable = true; boolean open = false; io:println(enable); // true io:println(open); // false } Ballerina 2201.1.1 - View Source 1 2 true false View Source literal boolean ðŸ’¡\u0026nbsp;\u0026nbsp;Integer Literal You can write integer values using a set of digits of the decimal system (Base 10 number) numbers. Digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9\n\u0026nbsp;See more int-literal.bal int-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0; int i2 = -10; int i3 = 100; int i4 = -100000; int i5 = 1234567890; io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 -10 100 -100000 1234567890 View Source literal int ðŸ’¡\u0026nbsp;\u0026nbsp;Hexadecimal Integer Literal You can also write an integer using the Hexadecimal (Base 16 number) numeral system.\n\u0026nbsp;See more int-literal-hex.bal int-literal-hex.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import ballerina/io; public function main() { int i1 = 0x0; // 0; int i2 = 0xa; // 10; int i3 = 0xA; // 10; int i4 = -0xa1b2; // -41394 int i5 = 0XAb; // 171 io:println(i1); io:println(i2); io:println(i3); io:println(i4); io:println(i5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 0 10 10 -41394 171 View Source literal int hex ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal There are two floating point types, float and decimal. Both use the same decimal number (Base 10 number) literal syntax.\n\u0026nbsp;See more float-literal.bal float-literal.out decimal-literal.bal decimal-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import ballerina/io; public function main() { float f1 = 12.345; float f2 = -5.678; float f3 = .5678; float f4 = 123.456f; float f5 = 567.8901F; float f6 = 505f; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 12.345 -5.678 0.5678 123.456 567.8901 505.0 View Source 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import ballerina/io; public function main() { decimal f1 = 12.345; decimal f2 = -5.678; decimal f3 = .5678; decimal f4 = 123.456d; decimal f5 = 567.8901D; decimal f6 = 505d; decimal f7 = 505.0d; io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); io:println(f6); io:println(f7); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 12.345 -5.678 0.5678 123.456 567.8901 505 505.0 View Source literal float decimal ðŸ’¡\u0026nbsp;\u0026nbsp;Floating Point Literal With Exponent You can write floating numbers using scientific notation. Letter e or E is used as the exponent indicator.\nfloat-exp-literal.bal float-exp-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import ballerina/io; public function main() { float f1 = 12e4; // 120000.0 float f2 = 543e-5; // 0.00543 float f3 = 1.23e3; // 1230.0 float f4 = 1.23e3f; // 1230.0 decimal d1 = 12e4; // 120000.0 decimal d2 = 543e-5; // 0.00543 decimal d3 = 1.23e3; // 1230.0 decimal d4 = 1.23e3d; // 1230.0 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(d1); io:println(d2); io:println(d3); io:println(d4); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 6 7 8 120000.0 0.00543 1230.0 1230.0 1.2E+5 0.00543 1.23E+3 1.23E+3 View Source literal float decimal exponent ðŸ’¡\u0026nbsp;\u0026nbsp;Hexadecimal Float Literal Hexadecimal numbers start with a Hex Indicator 0x (Number zero and lowercase letter x) or 0X (Number zero and Uppercase letter X) Hex digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a or A, b or B, c or C, d or D, e or E, f or F\nfloat-hex-literal.bal float-hex-literal.out 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import ballerina/io; public function main() { float f1 = 0x5.8; // 5.5 float f2 = -0x5.8; // -5.5 float f3 = 0x7b.74bc6a7ef9db22d; // 123.456 float f4 = 0X7B.74BC6A7EF9DB22D; // 123.456 float f5 = 0x1F9.A; // 505.625 io:println(f1); io:println(f2); io:println(f3); io:println(f4); io:println(f5); } Ballerina 2201.1.1 - View Source 1 2 3 4 5 5.5 -5.5 123.456 123.456 505.625 View Source float hex literal "},{"uri":"https://bal.tips/_footer/","title":"","tags":[],"description":"","content":"Bal.tips 2022 Hasitha Aravinda. Built using docdock and Hugo\n"},{"uri":"https://bal.tips/_header/","title":"","tags":[],"description":"","content":" ðŸ’¡ Ballerina Tips "},{"uri":"https://bal.tips/_menu-footer/","title":"","tags":[],"description":"","content":" About All Examples Thank you Copyright About Author Website Source Report an Issue Links Ballerina.io Ballerina By Examples Ballerina Language Specification Bal.tips - A Blog by Hasitha Aravinda.\n"},{"uri":"https://bal.tips/","title":"ðŸ’¡ Ballerina Tips","tags":[],"description":"","content":" "},{"uri":"https://bal.tips/copyright/","title":"Copyright","tags":[],"description":"","content":"Content This work including the content of pages, tips etc. is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License by Hasitha Aravinda.\nAll Ballerina Example Source in this website are licensed under MIT License, unless explicitly mention in the top of the source code.\nTerms and Trademarks Ballerina Ballerina is an open-source programming language for the cloud that makes it easier to use, combine, and create network services - ballerina.io\nBallerina is a trademark of WSO2, Inc. All other marks and logos are property of their respective owners.\nImages and Figures The Mascot image is from Robot chatbot vector created by upklyak - www.freepik.com. See their work here. "},{"uri":"https://bal.tips/thankyou/","title":"Thank you","tags":[],"description":"","content":"When I built this website, I was inspired by multiple Hugo themes. I built this re-using and modifying some of the Hugo themes content. Thank you original authors for their hard work and for making this website simple, clean, and beautiful.\nPrimary Theme - hugo-theme-docdock by vjeantet MIT license. Short Codes inspirations Tabs from hugo-theme-learn by matcornic - MIT license. hugo-book by alex-shpak - MIT license. "}]